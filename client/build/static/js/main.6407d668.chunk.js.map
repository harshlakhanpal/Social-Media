{"version":3,"sources":["assets/icons/delete.svg","assets/icons/Add.svg","assets/img/loader.gif","assets/icons/view-arrow.svg","assets/icons/right-arrow.svg","assets/icons/heart.svg","assets/icons/heart-filled.svg","assets/icons/bars-solid.svg","store/app/reducer.js","store/index.js","components/Landing.js","queries/index.js","components/Loader.js","components/CreatePost.js","components/Home.js","components/Login.js","store/app/actions.js","components/Drawer.js","components/Register.js","components/Post.js","components/PageNotFound.js","components/PrivateRoute.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["module","exports","initialState","drawerVisibility","user","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","app","state","type","payload","store","createStore","applyMiddleware","Landing","history","useHistory","style","display","flexDirection","alignItems","justifyContent","className","marginTop","onClick","push","getPosts","gql","getPost","createPost","createComment","deleteComment","likePost","deletePost","login","register","Loader","src","Loading","CreatePost","useState","body","setBody","useMutation","variables","context","headers","authorization","localStorage","getItem","onCompleted","onError","error","console","log","newPost","loading","called","data","marginBottom","rows","name","value","onChange","e","target","placeholder","Home","posts","setPosts","useQuery","fetchPolicy","map","username","id","createdAt","fontSize","padding","moment","fromNow","viewArrow","alt","Login","dispatch","useDispatch","setUsername","password","setPassword","useEffect","pollInterval","loginAction","setItem","JSON","stringify","token","userLogin","DrawerContainer","styled","div","Drawer","visible","useSelector","width","textAlign","rightArrow","replace","Register","email","setEmail","confirmPassword","setConfirmPassword","userRegister","userRegistration","a","Object","keys","message","label","Post","parse","postId","useParams","likeCount","setLikeCount","postLikes","setPostLikes","commentID","setCommentID","post","setPost","likes","length","newComment","toggleLike","postDelete","commentDelete","paddingTop","del","some","one","filledHeart","emptyHeart","comments","wordBreak","alignSelf","PageNotFound","PrivateRoute","component","MyComponent","render","MyRender","rest","props","to","Header","loggedIn","Footer","location","useLocation","checkLoggedIn","pathname","add","height","App","exact","path","cache","InMemoryCache","addTypename","client","ApolloClient","uri","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6407d668.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.68ee63aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/Add.d28f9fce.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.8ab7e767.gif\";","module.exports = __webpack_public_path__ + \"static/media/view-arrow.eccd1885.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.5d1abd5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.0a029a20.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-filled.3c2916f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/bars-solid.f21568ab.svg\";","const initialState = {\n  drawerVisibility: false,\n  user: {},\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"TOGGLE_DRAWER\":\n      return {\n        ...state,\n        drawerVisibility: !state.drawerVisibility,\n      };\n    case \"LOGIN\":\n      return {\n        ...state,\n        user: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport app from \"./app/reducer\";\n\nconst middlewares = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  app,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst Landing = () => {\n  const history = useHistory();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {\" \"}\n      <h1 className=\"title\">Welcome</h1>\n      <div style={{ display: \"block\", marginTop: \"1rem\" }}>\n        <button className=\"btn\" onClick={() => history.push(\"/login\")}>\n          Login\n        </button>\n        <button className=\"btn\" onClick={() => history.push(\"/register\")}>\n          Sign up\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import { gql } from \"apollo-boost\";\n\nconst getPosts = gql`\n  query {\n    getPosts {\n      username\n      body\n      id\n      createdAt\n      comments {\n        id\n        username\n        body\n        createdAt\n      }\n      likes {\n        username\n        createdAt\n      }\n    }\n  }\n`;\n\nconst getPost = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      username\n      body\n      id\n      createdAt\n      comments {\n        id\n        username\n        body\n        createdAt\n      }\n      likes {\n        username\n        createdAt\n      }\n    }\n  }\n`;\n\nconst createPost = gql`\n  mutation($body: String!) {\n    createPost(body: $body) {\n      username\n      body\n      id\n      createdAt\n      comments {\n        id\n        username\n        body\n        createdAt\n      }\n      likes {\n        username\n        createdAt\n      }\n    }\n  }\n`;\n\nconst createComment = gql`\n  mutation($postId: ID!, $body: String!) {\n    createComment(postId: $postId, body: $body) {\n      username\n      body\n      id\n      createdAt\n      comments {\n        id\n        username\n        body\n        createdAt\n      }\n      likes {\n        username\n        createdAt\n      }\n    }\n  }\n`;\n\nconst deleteComment = gql`\n  mutation($postId: ID!, $commentID: ID!) {\n    deleteComment(postId: $postId, commentID: $commentID) {\n      username\n      body\n      id\n      createdAt\n      comments {\n        id\n        username\n        body\n        createdAt\n      }\n      likes {\n        username\n        createdAt\n      }\n    }\n  }\n`;\n\nconst likePost = gql`\n  mutation($postId: ID!) {\n    likePost(postId: $postId) {\n      username\n      body\n      id\n      createdAt\n      comments {\n        id\n        username\n        body\n        createdAt\n      }\n      likes {\n        username\n        createdAt\n      }\n    }\n  }\n`;\n\nconst deletePost = gql`\n  mutation($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`;\n\nconst login = gql`\n  mutation($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      username\n      email\n      token\n      id\n    }\n  }\n`;\n\nconst register = gql`\n  mutation(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      username: $username\n      email: $email\n      password: $password\n      confirmPassword: $confirmPassword\n    ) {\n      username\n      email\n      token\n      id\n      createdAt\n    }\n  }\n`;\n\nexport {\n  login,\n  register,\n  getPosts,\n  getPost,\n  createPost,\n  deletePost,\n  createComment,\n  deleteComment,\n  likePost,\n};\n","import React from \"react\";\nimport Loading from \"../assets/img/loader.gif\";\nconst Loader = () => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <img src={Loading} />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { createPost, getPosts } from \"../queries\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"./Loader\";\n\nconst CreatePost = () => {\n  const history = useHistory();\n  const [body, setBody] = useState(\"\");\n  let [newPost, { called, loading, data, error }] = useMutation(createPost, {\n    variables: { body },\n    context: {\n      headers: { authorization: localStorage.getItem(\"token\") },\n    },\n    //  update(proxy, result) {\n    //    const data = proxy.readQuery({\n    //      query: getPosts,\n    //    });\n    //    console.log(data);\n    //    data.getPosts.push(result.data.createPost);\n    //    proxy.writeQuery({ query: getPosts, data });\n    //  },\n    //  refetchQueries: [\"getPosts\"],\n    //  awaitRefetchQueries: true,\n    //  pollInterval: 0,\n    onCompleted: () => {\n      history.push(\"/home\");\n    },\n    onError: (error) => {\n      console.log(\"Error\", error);\n    },\n  });\n  return (\n    <div className=\"create-post\">\n      {loading && <Loader />}\n      <h1>Share your thoughts with us</h1>\n      <textarea\n        className=\"input\"\n        style={{ marginBottom: \"0\" }}\n        rows=\"5\"\n        name=\"Body\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        placeholder=\"Let us know what's on your mind \"\n      />\n      <button className=\"btn\" onClick={newPost}>\n        Share\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport CreatePost from \"./CreatePost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { getPosts } from \"../queries\";\nimport { useHistory } from \"react-router-dom\";\n\nimport viewArrow from \"../assets/icons/view-arrow.svg\";\nimport Loader from \"./Loader\";\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n  const history = useHistory();\n  const { data, loading } = useQuery(getPosts, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      console.log(data);\n      setPosts(data.getPosts);\n    },\n  });\n  //   console.log(posts);\n\n  return (\n    <section className=\"home\">\n      {loading && <Loader />}\n      {/* <CreatePost /> */}\n      {posts.map(({ username, body, id, createdAt }) => (\n        <div className=\"card\">\n          <div className=\"info\">\n            <p style={{ fontSize: \"1.65rem\", padding: \"1.3rem\" }}>{body}</p>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                padding: \"1rem\",\n              }}\n            >\n              <p>{username}</p>\n              <p>{moment(createdAt).fromNow()}</p>\n            </div>\n          </div>\n          <div className=\"action\" onClick={() => history.push(`/home/${id}`)}>\n            <img src={viewArrow} alt=\"View post\" className=\"icon\" />\n          </div>\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { login } from \"../queries\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { login as loginAction } from \"../store/app/actions\";\n\nimport Loader from \"./Loader\";\n\nconst Login = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(\"user\")) history.push(\"/home\");\n  }, []);\n\n  let [userLogin, { called, loading, data, error }] = useMutation(login, {\n    variables: { username, password },\n    pollInterval: 0,\n    onCompleted: (data) => {\n      dispatch(loginAction(data.login));\n      localStorage.setItem(\"token\", JSON.stringify(data.login.token));\n      localStorage.setItem(\"user\", JSON.stringify(data.login));\n\n      history.push(\"/home\");\n    },\n  });\n\n  //   console.log(loading, data, error);\n  //   if (error) {\n  //     console.log(error.message);\n  //   }\n\n  return (\n    <div className=\"login\">\n      {loading && <Loader />}\n      <h1>Login</h1>\n      <input\n        className=\"input\"\n        name=\"username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        placeholder=\"Enter your username\"\n      />\n\n      <input\n        className=\"input\"\n        name=\"password\"\n        type=\"password\"\n        value={password}\n        //   onPressEnter={handleLogin}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Enter your password\"\n      />\n      <br />\n      <span onClick={() => history.push(\"/register\")} className=\"link\">\n        Not a member? Register here.\n      </span>\n      <br />\n\n      <button className=\"btn\" onClick={userLogin}>\n        Login\n      </button>\n      <br />\n    </div>\n  );\n};\n\nexport default Login;\n","export const toggleDrawer = () => {\n  return { type: \"TOGGLE_DRAWER\" };\n};\n\nexport const login = (data) => {\n  return { type: \"LOGIN\", payload: data };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleDrawer } from \"../store/app/actions\";\nimport rightArrow from \"../assets/icons/right-arrow.svg\";\n\nconst DrawerContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 30%;\n  height: 100%;\n  background: #4265e2;\n  z-index: 100;\n  div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Drawer = () => {\n  const history = useHistory();\n  const visible = useSelector((state) => state.app.drawerVisibility);\n  const dispatch = useDispatch();\n\n  console.log(visible);\n  return (\n    <>\n      {visible ? (\n        <DrawerContainer>\n          <div>\n            <span\n              style={{ width: \"100%\", textAlign: \"center\" }}\n              onClick={() => dispatch(toggleDrawer())}\n            >\n              <img src={rightArrow} alt=\"hide sidebar\" className=\"icon\" />\n            </span>\n\n            <div onClick={() => history.replace(\"/home/create_post\")}>\n              Option1\n            </div>\n            <div>Option2</div>\n            <div>Option3</div>\n          </div>\n        </DrawerContainer>\n      ) : null}\n    </>\n  );\n};\n\nexport default Drawer;\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\n// import * as compose from \"lodash.flowright\";\n\nimport { register } from \"../queries\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Register = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [userRegister, { loading }] = useMutation(register);\n\n  const userRegistration = async () => {\n    try {\n      userRegister({\n        variables: { username, email, password, confirmPassword },\n      });\n      history.push(\"/login\");\n    } catch (error) {\n      console.log(Object.keys(error), error.message);\n    }\n  };\n\n  return (\n    <div className=\"register\">\n      <h1>Register</h1>\n      <input\n        className=\"input\"\n        label=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        placeholder=\"Enter your Username\"\n      />\n      <input\n        className=\"input\"\n        label=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Enter your Email\"\n      />\n      <input\n        className=\"input\"\n        type=\"password\"\n        value={password}\n        label=\"Password\"\n        //   onPressEnter={handleLogin}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Enter your Password\"\n      />\n      <input\n        className=\"input\"\n        type=\"password\"\n        name=\"confirmPassword\"\n        value={confirmPassword}\n        label=\"Confirm Password\"\n        //   onPressEnter={handleLogin}\n        onChange={(e) => setConfirmPassword(e.target.value)}\n        placeholder=\"Confirm your password\"\n      />\n      <br />\n      <span onClick={() => history.push(\"/login\")} className=\"link\">\n        Already a member? Login.\n      </span>\n      <br />\n      <button\n        className=\"btn\"\n        onClick={userRegistration}\n        //   loading={loading}\n        //   disabled={!username.length || !password.length}\n      >\n        Register\n      </button>\n      <br />\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport {\n  getPost,\n  createComment,\n  likePost,\n  deletePost,\n  deleteComment,\n} from \"../queries\";\nimport del from \"../assets/icons/delete.svg\";\nimport emptyHeart from \"../assets/icons/heart.svg\";\nimport filledHeart from \"../assets/icons/heart-filled.svg\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Loader from \"./Loader\";\n\nconst Post = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const history = useHistory();\n  let { postId } = useParams();\n  const [likeCount, setLikeCount] = useState(0);\n  const [postLikes, setPostLikes] = useState([]);\n  const [commentID, setCommentID] = useState(\"\");\n  const [post, setPost] = useState({});\n  const [body, setBody] = useState(\"\");\n  const handleBodyChange = (e) => {\n    setBody(e.target.value);\n  };\n\n  const { loading } = useQuery(getPost, {\n    variables: { postId },\n    onCompleted: async (data) => {\n      console.log(data);\n\n      await setPost(data.getPost);\n      await setPostLikes(data.getPost.likes);\n      await setLikeCount(data.getPost.likes.length);\n    },\n  });\n\n  let [newComment] = useMutation(createComment, {\n    variables: { body, postId },\n    context: {\n      headers: { authorization: localStorage.getItem(\"token\") },\n    },\n    onCompleted: async (data) => {\n      await setPost(data.createComment);\n      await setBody(\"\");\n    },\n    onError: (error) => {\n      console.log(\"Error\", error);\n    },\n  });\n\n  let [toggleLike] = useMutation(likePost, {\n    variables: { postId },\n    context: {\n      headers: { authorization: localStorage.getItem(\"token\") },\n    },\n    onCompleted: async (data) => {\n      console.log(data);\n      await setLikeCount(data.likePost.likes.length);\n      await setPostLikes(data.likePost.likes);\n      setPost(data.likePost);\n    },\n    onError: (error) => {\n      console.log(\"Error\", error);\n    },\n  });\n\n  let [postDelete] = useMutation(deletePost, {\n    variables: { postId },\n    context: {\n      headers: { authorization: localStorage.getItem(\"token\") },\n    },\n    //  refetchQueries: [\"getPosts\"],\n    onCompleted: (data) => {\n      console.log(data);\n      history.push(\"/home\");\n    },\n    onError: (error) => {\n      console.log(\"Error\", error);\n    },\n  });\n  let [commentDelete] = useMutation(deleteComment, {\n    variables: { postId, commentID },\n    context: {\n      headers: { authorization: localStorage.getItem(\"token\") },\n    },\n    onCompleted: (data) => {\n      setPost(data.deleteComment);\n    },\n    onError: (error) => {\n      console.log(\"Error\", error);\n    },\n  });\n\n  //   useEffect(() => {\n  //     getpost();\n  //   }, []);\n\n  console.log(commentID);\n  return (\n    <section className=\"post-page\">\n      {loading && <Loader />}\n      <div>\n        {post && (\n          <>\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <div style={{ fontSize: \"1.65rem\" }}>{post.body}</div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    paddingTop: \"1rem\",\n                  }}\n                >\n                  <p style={{ textAlign: \"end\" }}>\n                    {`Posted by ${post.username}`}\n                  </p>\n                  <p>\n                    {likeCount === 0 || likeCount > 1\n                      ? `Liked by ${likeCount} users.`\n                      : `Liked by ${likeCount} user.`}\n                  </p>\n                </div>\n              </div>\n              <div className=\"actions\">\n                {user && user.username === post.username && (\n                  <span onClick={postDelete}>\n                    <img src={del} alt=\"Delete Post\" className=\"icon\" />\n                  </span>\n                )}\n                <span className=\"like\" onClick={toggleLike}>\n                  {true &&\n                  postLikes.some((one) => one.username === user.username) ? (\n                    <img\n                      src={filledHeart}\n                      alt=\"Like/Unlike Post\"\n                      className=\"icon\"\n                    />\n                  ) : (\n                    <img\n                      src={emptyHeart}\n                      alt=\"Like/Unlike Post\"\n                      className=\"icon\"\n                    />\n                  )}\n                </span>\n              </div>\n            </div>\n            <div className=\"textarea-container\">\n              <textarea\n                className=\"input\"\n                style={{ marginBottom: \"0\" }}\n                rows=\"4\"\n                placeholder=\"Comment here.\"\n                value={body}\n                onChange={handleBodyChange}\n              ></textarea>\n              <button className=\"btn\" onClick={newComment}>\n                Comment\n              </button>\n            </div>\n            {post.comments &&\n              post.comments.length > 0 &&\n              post.comments.map(({ body, id, username }) => (\n                <div className=\"comment\">\n                  <span style={{ wordBreak: \"break-all\" }}>{body}</span>\n                  {user && user.username === username && (\n                    <span\n                      style={{ alignSelf: \"flex-end\" }}\n                      onClick={async () => {\n                        await setCommentID(id);\n                        commentDelete();\n                      }}\n                    >\n                      <img src={del} alt=\"Delete comment\" className=\"icon\" />\n                    </span>\n                  )}\n                </div>\n              ))}\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\n\nconst PageNotFound = () => (\n  <div>\n    <h1>Error 404: Page not found</h1>\n    <p>\n      This page isn't available. Try checking the URL or visit a different page.\n    </p>\n  </div>\n);\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: MyComponent = null,\n  render: MyRender = null,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem(\"token\") ? (\n          MyRender ? (\n            MyRender(props)\n          ) : MyComponent ? (\n            <MyComponent {...props} />\n          ) : null\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleDrawer } from \"../store/app/actions\";\nimport menu from \"../assets/icons/bars-solid.svg\";\n\nconst Header = () => {\n  const loggedIn = useSelector((state) => state.app.user);\n  const checkLoggedIn =\n    Object.keys(loggedIn).length > 0 || localStorage.getItem(\"user\")\n      ? true\n      : false;\n  const dispatch = useDispatch();\n  return (\n    <div className=\"app-header\">\n      <h2>Social Media</h2>\n      {/* {checkLoggedIn && (\n        <span onClick={() => dispatch(toggleDrawer())}>\n          <img src={menu} alt=\"logo\" className=\"icon\" />\n        </span>\n      )} */}\n    </div>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport add from \"../assets/icons/Add.svg\";\n\nconst Footer = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const loggedIn = useSelector((state) => state.app.user);\n  const checkLoggedIn =\n    Object.keys(loggedIn).length > 0 || localStorage.getItem(\"user\")\n      ? true\n      : false;\n\n  return (\n    <>\n      {checkLoggedIn ? (\n        location.pathname !== \"/home/create_post\" ? (\n          <div\n            className=\"footer\"\n            onClick={() => history.push(\"/home/create_post\")}\n          >\n            <img\n              src={add}\n              style={{ height: \"2.4rem\", width: \"2.4rem\" }}\n              alt=\"New post\"\n              className=\"icon\"\n            />\n          </div>\n        ) : (\n          <div className=\"footer\">\n            <img\n              src={add}\n              style={{ height: \"2.4rem\", width: \"2.4rem\" }}\n              alt=\"New post\"\n              className=\"icon\"\n            />\n          </div>\n        )\n      ) : null}\n    </>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.scss\";\n// import { Provider, defaultTheme, Flex } from \"@adobe/react-spectrum\";\nimport Landing from \"./components/Landing\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Drawer from \"./components/Drawer\";\nimport Register from \"./components/Register\";\nimport Post from \"./components/Post\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { Switch, Route } from \"react-router-dom\";\nimport CreatePost from \"./components/CreatePost\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Drawer />\n\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <PrivateRoute exact path=\"/home\" component={Home} />\n          <PrivateRoute exact path=\"/home/create_post\" component={CreatePost} />\n          <PrivateRoute exact path=\"/home/:postId\" component={Post} />\n\n          <PageNotFound />\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst cache = new InMemoryCache({ addTypename: false });\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n  cache,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}